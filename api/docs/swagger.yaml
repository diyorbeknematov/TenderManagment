basePath: /
definitions:
  model.APIError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  model.AwardTenderResp:
    properties:
      status:
        type: boolean
    type: object
  model.Bid:
    properties:
      comments:
        type: string
      contractor_id:
        type: string
      created_at:
        type: string
      delivery_time:
        type: string
      id:
        type: string
      price:
        type: number
      status:
        type: string
      tender_id:
        type: string
    type: object
  model.BidHistory:
    properties:
      comments:
        type: string
      contractor_id:
        type: string
      created_at:
        type: string
      delivery_time:
        type: string
      id:
        type: string
      price:
        type: number
      status:
        type: string
      tender_deadline:
        type: string
      tender_id:
        type: string
      tender_title:
        type: string
    type: object
  model.CreateBid:
    properties:
      comments:
        type: string
      delivery_time:
        type: string
      price:
        type: number
    type: object
  model.CreateTenderReqSwag:
    properties:
      budget:
        type: number
      description:
        type: string
      diadline:
        type: string
      title:
        type: string
    type: object
  model.CreateTenderResp:
    properties:
      created_at:
        type: string
      id:
        type: string
      message:
        type: string
    type: object
  model.DeleteTenderResp:
    properties:
      message:
        type: string
    type: object
  model.Error:
    properties:
      message:
        type: string
    type: object
  model.GetAllTendersResp:
    properties:
      count:
        type: integer
      tenders:
        items:
          $ref: '#/definitions/model.Tender'
        type: array
    type: object
  model.GetTenderBidsResp:
    properties:
      bids:
        items:
          $ref: '#/definitions/model.Bid'
        type: array
      count:
        type: integer
    type: object
  model.LoginResp:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  model.LoginUser:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  model.SubmitBitReqSwag:
    properties:
      bid_id:
        type: string
      status:
        type: string
    type: object
  model.SubmitBitResp:
    properties:
      status:
        type: boolean
    type: object
  model.Tender:
    properties:
      budget:
        type: number
      client_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      diadline:
        type: string
      id:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  model.UpdateTenderReqSwag:
    properties:
      budget:
        type: number
      description:
        type: string
      diadline:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  model.UpdateTenderResp:
    properties:
      message:
        type: string
    type: object
  model.UserRegisterReq:
    properties:
      email:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  model.UserRegisterResp:
    properties:
      created_at:
        type: string
      id:
        type: string
      message:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample API.
  title: TENDER MANAGMENT API
  version: "0.1"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: User info
        in: body
        name: Info
        required: true
        schema:
          $ref: '#/definitions/model.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LoginResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Login
      tags:
      - Register And Login
  /register:
    post:
      consumes:
      - application/json
      description: Registration
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserRegisterResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Registarion
      tags:
      - Register And Login
  /tenders:
    get:
      consumes:
      - application/json
      description: Tenderlar ro'yxatini olish uchun API endpoint
      parameters:
      - description: 'Bir sahifadagi tenderlar soni (standart: 10)'
        in: query
        name: limit
        type: integer
      - description: 'Sahifa raqami (standart: 1)'
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Tenderlar muvaffaqiyatli qaytarildi
          schema:
            $ref: '#/definitions/model.GetAllTendersResp'
        "400":
          description: Noto'g'ri parametrlar
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Server xatosi yoki GetAllTenders funksiyasi ishlamadi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Tenderlar ro'yxatini olish
      tags:
      - Client
    post:
      consumes:
      - application/json
      description: Yangi tender yaratish uchun API endpoint
      parameters:
      - description: Tender yaratish uchun talab qilinadigan ma'lumotlar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.CreateTenderReqSwag'
      produces:
      - application/json
      responses:
        "200":
          description: Tender muvaffaqiyatli yaratildi
          schema:
            $ref: '#/definitions/model.CreateTenderResp'
        "400":
          description: Ma'lumotlarni olishda xatolik
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Server xatosi yoki CreateTender funksiyasi ishlamadi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Tender yaratish
      tags:
      - Client
  /tenders/{id}:
    delete:
      consumes:
      - application/json
      description: Mavjud tenderni o'chirish uchun API endpoint
      parameters:
      - description: Tenderning ID'si
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tender muvaffaqiyatli o'chirildi
          schema:
            $ref: '#/definitions/model.DeleteTenderResp'
        "500":
          description: Server xatosi yoki DeleteTender funksiyasi ishlamadi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Tenderni o'chirish
      tags:
      - Client
    put:
      consumes:
      - application/json
      description: Mavjud tenderning ma'lumotlarini yangilash uchun API endpoint
      parameters:
      - description: Tender ID
        in: path
        name: id
        required: true
        type: string
      - description: Tenderni yangilash uchun talab qilinadigan ma'lumotlar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.UpdateTenderReqSwag'
      produces:
      - application/json
      responses:
        "200":
          description: Tender ma'lumotlari muvaffaqiyatli yangilandi
          schema:
            $ref: '#/definitions/model.UpdateTenderResp'
        "400":
          description: Ma'lumotlarni olishda xatolik
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Server xatosi yoki UpdateTender funksiyasi ishlamadi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Tender ma'lumotlarini yangilash
      tags:
      - Client
  /tenders/{id}/award/{bid_id}:
    post:
      consumes:
      - application/json
      description: Tender uchun tanlangan taklifni "awarded" sifatida belgilash
      parameters:
      - description: Tender ID
        in: path
        name: id
        required: true
        type: string
      - description: Taklif ID
        in: path
        name: bid_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Taklif muvaffaqiyatli belgilandi
          schema:
            $ref: '#/definitions/model.AwardTenderResp'
        "400":
          description: Yaroqsiz ma'lumot yoki noto'g'ri so'rov
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Tender yoki taklif topilmadi
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Server xatosi yoki AwardTender funksiyasi ishlamadi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Tanlangan taklifni belgilash
      tags:
      - Client
  /tenders/{id}/bids:
    get:
      consumes:
      - application/json
      description: Contractor can get all bids of a tender with optional filters
      parameters:
      - description: Tender ID
        in: path
        name: id
        required: true
        type: string
      - description: Maximum price filter
        in: query
        name: max_price
        type: number
      - description: Maximum delivery time filter (ISO8601 format)
        in: query
        name: max_delivery_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of bids
          schema:
            items:
              $ref: '#/definitions/model.Bid'
            type: array
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Get bids of tender
      tags:
      - Contractor
    post:
      consumes:
      - application/json
      description: Contractor can create bid to teender
      parameters:
      - description: 'bid infos (DeliveryTime format: dd-mm-yyyy)'
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.CreateBid'
      - description: Tender id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
        "400":
          description: error
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Server xatosi yoki CreateBid funksiyasi ishlamadi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Create bid
      tags:
      - Contractor
  /tenders/{id}/my/bids:
    get:
      consumes:
      - application/json
      description: Client o'z tenderi uchun bildirilgan barcha takliflarni olish uchun
        API endpoint
      parameters:
      - description: Tender ID'si
        in: path
        name: id
        required: true
        type: string
      - description: 'Bir sahifadagi takliflar soni (standart: 10)'
        in: query
        name: limit
        type: integer
      - description: 'Sahifa raqami (standart: 1)'
        in: query
        name: page
        type: integer
      - description: 'Takliflarning boshlang''ich narxi (filtrlash uchun ixtiyoriy,
          float qiymat ko''rinishida yozilishi kerak, masalan: 100.50)'
        in: query
        name: start_price
        type: string
      - description: 'Takliflarning yakuniy narxi (filtrlash uchun ixtiyoriy, float
          qiymat ko''rinishida yozilishi kerak, masalan: 500.75)'
        in: query
        name: end_price
        type: string
      - description: 'Boshlanish sanasi (filtrlash uchun ixtiyoriy, format: YYYY-MM-DD)'
        in: query
        name: start_date
        type: string
      - description: 'Tugash sanasi (filtrlash uchun ixtiyoriy, format: YYYY-MM-DD)'
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Takliflar muvaffaqiyatli qaytarildi
          schema:
            $ref: '#/definitions/model.GetTenderBidsResp'
        "400":
          description: Ma'lumotlarni olishda xatolik
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Server xatosi yoki GetTenderBids funksiyasi ishlamadi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Tenderga bildirilgan takliflarni olish
      tags:
      - Client
  /tenders/all:
    get:
      consumes:
      - application/json
      description: Retrieve a list of tenders filtered by status or other parameters
      parameters:
      - description: Filter by status (e.g., open, closed, awarded)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of tenders
          schema:
            items:
              $ref: '#/definitions/model.Tender'
            type: array
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Get tenders by filters
      tags:
      - Contractor
  /tenders/status_change/{id}/bids:
    post:
      consumes:
      - application/json
      description: Tender uchun tanlangan taklifni statusini o'zgartirish
      parameters:
      - description: Tender ID'si
        in: path
        name: id
        required: true
        type: string
      - description: Taklif haqida ma'lumot
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.SubmitBitReqSwag'
      produces:
      - application/json
      responses:
        "200":
          description: Taklif muvaffaqiyatli belgilandi
          schema:
            $ref: '#/definitions/model.SubmitBitResp'
        "400":
          description: Ma'lumotlarni olishda xatolik
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Server xatosi yoki BidAwarded funksiyasi ishlamadi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Tanlangan taklifni belgilash
      tags:
      - Client
  /users/{id}/bids:
    get:
      consumes:
      - application/json
      description: Retrieve all bids placed by a contractor for various tenders, including
        tender details like title and deadline
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of bid history
          schema:
            items:
              $ref: '#/definitions/model.BidHistory'
            type: array
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Failed to retrieve bid history
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - Bearer: []
      summary: Get Bid History for a Contractor
      tags:
      - Contractor
schemes:
- http
- https
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
